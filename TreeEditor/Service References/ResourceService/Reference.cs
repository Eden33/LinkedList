//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TreeEditor.ResourceService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ResourceService.IResourceService", CallbackContract=typeof(TreeEditor.ResourceService.IResourceServiceCallback))]
    public interface IResourceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/Login", ReplyAction="http://tempuri.org/IResourceService/LoginResponse")]
        bool Login(string loginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/Login", ReplyAction="http://tempuri.org/IResourceService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string loginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/TryLock", ReplyAction="http://tempuri.org/IResourceService/TryLockResponse")]
        bool TryLock(int id, Model.Data.ItemType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/TryLock", ReplyAction="http://tempuri.org/IResourceService/TryLockResponse")]
        System.Threading.Tasks.Task<bool> TryLockAsync(int id, Model.Data.ItemType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetCollectionPoint", ReplyAction="http://tempuri.org/IResourceService/GetCollectionPointResponse")]
        Model.Data.CollectionPoint GetCollectionPoint(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetCollectionPoint", ReplyAction="http://tempuri.org/IResourceService/GetCollectionPointResponse")]
        System.Threading.Tasks.Task<Model.Data.CollectionPoint> GetCollectionPointAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetCollectionVat", ReplyAction="http://tempuri.org/IResourceService/GetCollectionVatResponse")]
        Model.Data.CollectionVat GetCollectionVat(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetCollectionVat", ReplyAction="http://tempuri.org/IResourceService/GetCollectionVatResponse")]
        System.Threading.Tasks.Task<Model.Data.CollectionVat> GetCollectionVatAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IResourceServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IResourceService/LockedNotification")]
        void LockedNotification(string owner, Model.Lock.LockBatch batch);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IResourceServiceChannel : TreeEditor.ResourceService.IResourceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResourceServiceClient : System.ServiceModel.DuplexClientBase<TreeEditor.ResourceService.IResourceService>, TreeEditor.ResourceService.IResourceService {
        
        public ResourceServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ResourceServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ResourceServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ResourceServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ResourceServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Login(string loginName) {
            return base.Channel.Login(loginName);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string loginName) {
            return base.Channel.LoginAsync(loginName);
        }
        
        public bool TryLock(int id, Model.Data.ItemType type) {
            return base.Channel.TryLock(id, type);
        }
        
        public System.Threading.Tasks.Task<bool> TryLockAsync(int id, Model.Data.ItemType type) {
            return base.Channel.TryLockAsync(id, type);
        }
        
        public Model.Data.CollectionPoint GetCollectionPoint(int id) {
            return base.Channel.GetCollectionPoint(id);
        }
        
        public System.Threading.Tasks.Task<Model.Data.CollectionPoint> GetCollectionPointAsync(int id) {
            return base.Channel.GetCollectionPointAsync(id);
        }
        
        public Model.Data.CollectionVat GetCollectionVat(int id) {
            return base.Channel.GetCollectionVat(id);
        }
        
        public System.Threading.Tasks.Task<Model.Data.CollectionVat> GetCollectionVatAsync(int id) {
            return base.Channel.GetCollectionVatAsync(id);
        }
    }
}
